<template class='doc-view'>
    <header id='fixed-top'>
        基础
    </header>
    <h2 id='fixed-platform'>
        启动
    </h2>
    <pre q-code>
        import { platform } from 'nefbl';
    </pre>
    <p>
        "platform"是一个用于屏蔽平台差异的方法，它会根据当前浏览器的环境来初始化后续需要使用的相关内容。其上有一些方法或属性可以使用，首先，需要获取其实例：
    </p>
    <pre q-code>
        let pf = platform(options);
    </pre>
    <h3 id='fixed-platform-options'>
        options
    </h3>
    <p>
        这是一个json，你可以通过这个配置项来告诉框架在屏蔽浏览器差异的时候你的一些额外意图。
    </p>
    <h4 id='fixed-platform-options-el'>
        el
    </h4>
    <p>
        必输，值需要是一个结点对象，表示此框架后续需要管理的区域。
    </p>
    <h4 id='fixed-platform-options-styles'>
        styles
    </h4>
    <p>
        一个数组，数组的内容应该是css字符串，用以设置全局css。
    </p>
    <h3 id='fixed-platform-return'>
        实例
    </h3>
    <p>
        "platform"执行后的实例"pf"，是一个对象，下面列出其中可用的方法或属性。
    </p>
    <h4 id='fixed-platform-return-bootstrap'>
        bootstrap
    </h4>
    <p>
        这是一个方法，用于启动模块（主模块）：
    </p>
    <pre q-code>
import appModule from "./app.module";
pf.bootstrap(appModule);
    </pre>
    <h2 id='fixed-inner'>
        内置
    </h2>
    <p>
        简单的说，组件就是标签、指令是属性，而服务就是方法。
    </p>
    <p>
        项目正常启动以后，就可以直接使用下面的内置组件、指令和服务了，而不需要引入额外的内容。
    </p>
    <h3 id='fixed-component'>
        组件
    </h3>
    <p>
        【待补充】
    </p>
    <h3 id='fixed-directive'>
        指令
    </h3>
    <p>
        【待补充】
    </p>
</template>
